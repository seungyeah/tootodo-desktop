// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: note_model.proto
// Protobuf C++ Version: 5.29.2

#include "note_model.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace note {

inline constexpr PropValueType::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PropValueType::PropValueType(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PropValueTypeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropValueTypeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropValueTypeDefaultTypeInternal() {}
  union {
    PropValueType _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropValueTypeDefaultTypeInternal _PropValueType_default_instance_;

inline constexpr BlockModel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        src_task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        body_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_type_{static_cast< ::note::BlockType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR BlockModel::BlockModel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockModelDefaultTypeInternal() {}
  union {
    BlockModel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockModelDefaultTypeInternal _BlockModel_default_instance_;

inline constexpr PropValueModel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        prop_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        prop_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        values_{nullptr},
        prop_type_{static_cast< ::note::PropertyType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PropValueModel::PropValueModel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PropValueModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PropValueModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PropValueModelDefaultTypeInternal() {}
  union {
    PropValueModel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PropValueModelDefaultTypeInternal _PropValueModel_default_instance_;

inline constexpr PageModel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contents_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connected_note_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        createdat_{nullptr},
        updatedat_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PageModel::PageModel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PageModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PageModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PageModelDefaultTypeInternal() {}
  union {
    PageModel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PageModelDefaultTypeInternal _PageModel_default_instance_;

inline constexpr NoteModel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        prop_values_{},
        pages_{},
        chat_msgs_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_color_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connected_task_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        createdat_{nullptr},
        updatedat_{nullptr},
        chat_type_{static_cast< ::chat::ChatType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NoteModel::NoteModel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NoteModelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteModelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteModelDefaultTypeInternal() {}
  union {
    NoteModel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteModelDefaultTypeInternal _NoteModel_default_instance_;
}  // namespace note
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_note_5fmodel_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_note_5fmodel_2eproto = nullptr;
const ::uint32_t
    TableStruct_note_5fmodel_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.user_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.category_id_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.category_color_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.category_name_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.prop_values_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.pages_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.connected_task_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.parent_id_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.chat_type_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.chat_msgs_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.createdat_),
        PROTOBUF_FIELD_OFFSET(::note::NoteModel, _impl_.updatedat_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _impl_.user_),
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _impl_.connected_note_),
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _impl_.contents_),
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _impl_.createdat_),
        PROTOBUF_FIELD_OFFSET(::note::PageModel, _impl_.updatedat_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::note::BlockModel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::note::BlockModel, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::note::BlockModel, _impl_.src_task_id_),
        PROTOBUF_FIELD_OFFSET(::note::BlockModel, _impl_.block_type_),
        PROTOBUF_FIELD_OFFSET(::note::BlockModel, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::note::PropValueModel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::note::PropValueModel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::note::PropValueModel, _impl_.prop_id_),
        PROTOBUF_FIELD_OFFSET(::note::PropValueModel, _impl_.prop_name_),
        PROTOBUF_FIELD_OFFSET(::note::PropValueModel, _impl_.prop_type_),
        PROTOBUF_FIELD_OFFSET(::note::PropValueModel, _impl_.values_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::note::PropValueType, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::note::PropValueType, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::note::PropValueType, _impl_.value_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 22, -1, sizeof(::note::NoteModel)},
        {36, 51, -1, sizeof(::note::PageModel)},
        {58, -1, -1, sizeof(::note::BlockModel)},
        {70, 82, -1, sizeof(::note::PropValueModel)},
        {86, -1, -1, sizeof(::note::PropValueType)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::note::_NoteModel_default_instance_._instance,
    &::note::_PageModel_default_instance_._instance,
    &::note::_BlockModel_default_instance_._instance,
    &::note::_PropValueModel_default_instance_._instance,
    &::note::_PropValueType_default_instance_._instance,
};
const char descriptor_table_protodef_note_5fmodel_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020note_model.proto\022\004note\032\037google/protobu"
    "f/timestamp.proto\032\020chat_model.proto\"\222\003\n\t"
    "NoteModel\022\n\n\002id\030\001 \001(\t\022\014\n\004user\030\002 \001(\t\022\r\n\005t"
    "itle\030\003 \001(\t\022\023\n\013category_id\030\004 \001(\t\022\026\n\016categ"
    "ory_color\030\005 \001(\t\022\025\n\rcategory_name\030\006 \001(\t\022)"
    "\n\013prop_values\030\007 \003(\0132\024.note.PropValueMode"
    "l\022\036\n\005pages\030\010 \003(\0132\017.note.PageModel\022\026\n\016con"
    "nected_task\030\t \001(\t\022\021\n\tparent_id\030\n \001(\t\022!\n\t"
    "chat_type\030\013 \001(\0162\016.chat.ChatType\022!\n\tchat_"
    "msgs\030\014 \003(\0132\016.chat.MsgModel\022-\n\tcreatedAt\030"
    "\r \001(\0132\032.google.protobuf.Timestamp\022-\n\tupd"
    "atedAt\030\016 \001(\0132\032.google.protobuf.Timestamp"
    "\"\316\001\n\tPageModel\022\n\n\002id\030\001 \001(\t\022\014\n\004user\030\002 \001(\t"
    "\022\r\n\005title\030\003 \001(\t\022\026\n\016connected_note\030\004 \001(\t\022"
    "\"\n\010contents\030\005 \003(\0132\020.note.BlockModel\022-\n\tc"
    "reatedAt\030\006 \001(\0132\032.google.protobuf.Timesta"
    "mp\022-\n\tupdatedAt\030\007 \001(\0132\032.google.protobuf."
    "Timestamp\"`\n\nBlockModel\022\n\n\002id\030\001 \001(\t\022\023\n\013s"
    "rc_task_id\030\002 \001(\t\022#\n\nblock_type\030\003 \001(\0162\017.n"
    "ote.BlockType\022\014\n\004body\030\004 \001(\t\"\200\001\n\016PropValu"
    "eModel\022\017\n\007prop_id\030\001 \001(\t\022\021\n\tprop_name\030\002 \001"
    "(\t\022%\n\tprop_type\030\003 \001(\0162\022.note.PropertyTyp"
    "e\022#\n\006values\030\004 \001(\0132\023.note.PropValueType\"C"
    "\n\rPropValueType\022\022\n\010multiple\030\001 \001(\tH\000\022\020\n\006s"
    "ingle\030\002 \001(\tH\000B\014\n\nvalue_type*\233\001\n\014Property"
    "Type\022\020\n\014MULTI_SELECT\020\000\022\021\n\rSINGLE_SELECT\020"
    "\001\022\010\n\004TEXT\020\002\022\n\n\006NUMBER\020\003\022\r\n\tDATE_TIME\020\004\022\010"
    "\n\004FILE\020\005\022\t\n\005IMAGE\020\006\022\010\n\004LINK\020\007\022\t\n\005EMAIL\020\010"
    "\022\t\n\005PHONE\020\t\022\014\n\010LOCATION\020\n*9\n\tBlockType\022\n"
    "\n\006EDITOR\020\000\022\010\n\004CODE\020\001\022\013\n\007DRAWING\020\002\022\t\n\005TAB"
    "LE\020\003b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_note_5fmodel_2eproto_deps[2] =
    {
        &::descriptor_table_chat_5fmodel_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_note_5fmodel_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_note_5fmodel_2eproto = {
    false,
    false,
    1212,
    descriptor_table_protodef_note_5fmodel_2eproto,
    "note_model.proto",
    &descriptor_table_note_5fmodel_2eproto_once,
    descriptor_table_note_5fmodel_2eproto_deps,
    2,
    5,
    schemas,
    file_default_instances,
    TableStruct_note_5fmodel_2eproto::offsets,
    file_level_enum_descriptors_note_5fmodel_2eproto,
    file_level_service_descriptors_note_5fmodel_2eproto,
};
namespace note {
const ::google::protobuf::EnumDescriptor* PropertyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_note_5fmodel_2eproto);
  return file_level_enum_descriptors_note_5fmodel_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PropertyType_internal_data_[] = {
    720896u, 0u, };
bool PropertyType_IsValid(int value) {
  return 0 <= value && value <= 10;
}
const ::google::protobuf::EnumDescriptor* BlockType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_note_5fmodel_2eproto);
  return file_level_enum_descriptors_note_5fmodel_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t BlockType_internal_data_[] = {
    262144u, 0u, };
bool BlockType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class NoteModel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NoteModel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NoteModel, _impl_._has_bits_);
};

void NoteModel::clear_chat_msgs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chat_msgs_.Clear();
}
void NoteModel::clear_createdat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.createdat_ != nullptr) _impl_.createdat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void NoteModel::clear_updatedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updatedat_ != nullptr) _impl_.updatedat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
NoteModel::NoteModel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:note.NoteModel)
}
inline PROTOBUF_NDEBUG_INLINE NoteModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::note::NoteModel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        prop_values_{visibility, arena, from.prop_values_},
        pages_{visibility, arena, from.pages_},
        chat_msgs_{visibility, arena, from.chat_msgs_},
        id_(arena, from.id_),
        user_(arena, from.user_),
        title_(arena, from.title_),
        category_id_(arena, from.category_id_),
        category_color_(arena, from.category_color_),
        category_name_(arena, from.category_name_),
        connected_task_(arena, from.connected_task_),
        parent_id_(arena, from.parent_id_) {}

NoteModel::NoteModel(
    ::google::protobuf::Arena* arena,
    const NoteModel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NoteModel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.createdat_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.createdat_)
                        : nullptr;
  _impl_.updatedat_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.updatedat_)
                        : nullptr;
  _impl_.chat_type_ = from._impl_.chat_type_;

  // @@protoc_insertion_point(copy_constructor:note.NoteModel)
}
inline PROTOBUF_NDEBUG_INLINE NoteModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        prop_values_{visibility, arena},
        pages_{visibility, arena},
        chat_msgs_{visibility, arena},
        id_(arena),
        user_(arena),
        title_(arena),
        category_id_(arena),
        category_color_(arena),
        category_name_(arena),
        connected_task_(arena),
        parent_id_(arena) {}

inline void NoteModel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, createdat_),
           0,
           offsetof(Impl_, chat_type_) -
               offsetof(Impl_, createdat_) +
               sizeof(Impl_::chat_type_));
}
NoteModel::~NoteModel() {
  // @@protoc_insertion_point(destructor:note.NoteModel)
  SharedDtor(*this);
}
inline void NoteModel::SharedDtor(MessageLite& self) {
  NoteModel& this_ = static_cast<NoteModel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.user_.Destroy();
  this_._impl_.title_.Destroy();
  this_._impl_.category_id_.Destroy();
  this_._impl_.category_color_.Destroy();
  this_._impl_.category_name_.Destroy();
  this_._impl_.connected_task_.Destroy();
  this_._impl_.parent_id_.Destroy();
  delete this_._impl_.createdat_;
  delete this_._impl_.updatedat_;
  this_._impl_.~Impl_();
}

inline void* NoteModel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NoteModel(arena);
}
constexpr auto NoteModel::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.prop_values_) +
          decltype(NoteModel::_impl_.prop_values_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.pages_) +
          decltype(NoteModel::_impl_.pages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.chat_msgs_) +
          decltype(NoteModel::_impl_.chat_msgs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(NoteModel), alignof(NoteModel), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NoteModel::PlacementNew_,
                                 sizeof(NoteModel),
                                 alignof(NoteModel));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NoteModel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NoteModel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NoteModel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NoteModel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NoteModel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NoteModel>(), &NoteModel::ByteSizeLong,
            &NoteModel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NoteModel, _impl_._cached_size_),
        false,
    },
    &NoteModel::kDescriptorMethods,
    &descriptor_table_note_5fmodel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NoteModel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 5, 103, 2> NoteModel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NoteModel, _impl_._has_bits_),
    0, // no _extensions_
    14, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294950912,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::note::NoteModel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.id_)}},
    // string user = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.user_)}},
    // string title = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.title_)}},
    // string category_id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.category_id_)}},
    // string category_color = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.category_color_)}},
    // string category_name = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.category_name_)}},
    // repeated .note.PropValueModel prop_values = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.prop_values_)}},
    // repeated .note.PageModel pages = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 1, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.pages_)}},
    // string connected_task = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.connected_task_)}},
    // string parent_id = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.parent_id_)}},
    // .chat.ChatType chat_type = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NoteModel, _impl_.chat_type_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.chat_type_)}},
    // repeated .chat.MsgModel chat_msgs = 12;
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 2, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.chat_msgs_)}},
    // .google.protobuf.Timestamp createdAt = 13;
    {::_pbi::TcParser::FastMtS1,
     {106, 0, 3, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.createdat_)}},
    // .google.protobuf.Timestamp updatedAt = 14;
    {::_pbi::TcParser::FastMtS1,
     {114, 1, 4, PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.updatedat_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user = 2;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.user_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string title = 3;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category_id = 4;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.category_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category_color = 5;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.category_color_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category_name = 6;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.category_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .note.PropValueModel prop_values = 7;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.prop_values_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .note.PageModel pages = 8;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.pages_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string connected_task = 9;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.connected_task_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent_id = 10;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.parent_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .chat.ChatType chat_type = 11;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.chat_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .chat.MsgModel chat_msgs = 12;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.chat_msgs_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp createdAt = 13;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.createdat_), _Internal::kHasBitsOffset + 0, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp updatedAt = 14;
    {PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.updatedat_), _Internal::kHasBitsOffset + 1, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::note::PropValueModel>()},
    {::_pbi::TcParser::GetTable<::note::PageModel>()},
    {::_pbi::TcParser::GetTable<::chat::MsgModel>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\16\2\4\5\13\16\15\0\0\16\11\0\0\0\0\0"
    "note.NoteModel"
    "id"
    "user"
    "title"
    "category_id"
    "category_color"
    "category_name"
    "connected_task"
    "parent_id"
  }},
};

PROTOBUF_NOINLINE void NoteModel::Clear() {
// @@protoc_insertion_point(message_clear_start:note.NoteModel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.prop_values_.Clear();
  _impl_.pages_.Clear();
  _impl_.chat_msgs_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.user_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.category_id_.ClearToEmpty();
  _impl_.category_color_.ClearToEmpty();
  _impl_.category_name_.ClearToEmpty();
  _impl_.connected_task_.ClearToEmpty();
  _impl_.parent_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.createdat_ != nullptr);
      _impl_.createdat_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.updatedat_ != nullptr);
      _impl_.updatedat_->Clear();
    }
  }
  _impl_.chat_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NoteModel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NoteModel& this_ = static_cast<const NoteModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NoteModel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NoteModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:note.NoteModel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.NoteModel.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string user = 2;
          if (!this_._internal_user().empty()) {
            const std::string& _s = this_._internal_user();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.NoteModel.user");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string title = 3;
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.NoteModel.title");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string category_id = 4;
          if (!this_._internal_category_id().empty()) {
            const std::string& _s = this_._internal_category_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.NoteModel.category_id");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string category_color = 5;
          if (!this_._internal_category_color().empty()) {
            const std::string& _s = this_._internal_category_color();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.NoteModel.category_color");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string category_name = 6;
          if (!this_._internal_category_name().empty()) {
            const std::string& _s = this_._internal_category_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.NoteModel.category_name");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // repeated .note.PropValueModel prop_values = 7;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_prop_values_size());
               i < n; i++) {
            const auto& repfield = this_._internal_prop_values().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .note.PageModel pages = 8;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_pages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_pages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string connected_task = 9;
          if (!this_._internal_connected_task().empty()) {
            const std::string& _s = this_._internal_connected_task();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.NoteModel.connected_task");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string parent_id = 10;
          if (!this_._internal_parent_id().empty()) {
            const std::string& _s = this_._internal_parent_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.NoteModel.parent_id");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // .chat.ChatType chat_type = 11;
          if (this_._internal_chat_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                11, this_._internal_chat_type(), target);
          }

          // repeated .chat.MsgModel chat_msgs = 12;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_chat_msgs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_chat_msgs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp createdAt = 13;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                13, *this_._impl_.createdat_, this_._impl_.createdat_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp updatedAt = 14;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                14, *this_._impl_.updatedat_, this_._impl_.updatedat_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:note.NoteModel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NoteModel::ByteSizeLong(const MessageLite& base) {
          const NoteModel& this_ = static_cast<const NoteModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NoteModel::ByteSizeLong() const {
          const NoteModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:note.NoteModel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .note.PropValueModel prop_values = 7;
            {
              total_size += 1UL * this_._internal_prop_values_size();
              for (const auto& msg : this_._internal_prop_values()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .note.PageModel pages = 8;
            {
              total_size += 1UL * this_._internal_pages_size();
              for (const auto& msg : this_._internal_pages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .chat.MsgModel chat_msgs = 12;
            {
              total_size += 1UL * this_._internal_chat_msgs_size();
              for (const auto& msg : this_._internal_chat_msgs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string user = 2;
            if (!this_._internal_user().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user());
            }
            // string title = 3;
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string category_id = 4;
            if (!this_._internal_category_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category_id());
            }
            // string category_color = 5;
            if (!this_._internal_category_color().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category_color());
            }
            // string category_name = 6;
            if (!this_._internal_category_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category_name());
            }
            // string connected_task = 9;
            if (!this_._internal_connected_task().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_connected_task());
            }
            // string parent_id = 10;
            if (!this_._internal_parent_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp createdAt = 13;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.createdat_);
            }
            // .google.protobuf.Timestamp updatedAt = 14;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updatedat_);
            }
          }
           {
            // .chat.ChatType chat_type = 11;
            if (this_._internal_chat_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_chat_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NoteModel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NoteModel*>(&to_msg);
  auto& from = static_cast<const NoteModel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:note.NoteModel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_prop_values()->MergeFrom(
      from._internal_prop_values());
  _this->_internal_mutable_pages()->MergeFrom(
      from._internal_pages());
  _this->_internal_mutable_chat_msgs()->MergeFrom(
      from._internal_chat_msgs());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_category_id().empty()) {
    _this->_internal_set_category_id(from._internal_category_id());
  }
  if (!from._internal_category_color().empty()) {
    _this->_internal_set_category_color(from._internal_category_color());
  }
  if (!from._internal_category_name().empty()) {
    _this->_internal_set_category_name(from._internal_category_name());
  }
  if (!from._internal_connected_task().empty()) {
    _this->_internal_set_connected_task(from._internal_connected_task());
  }
  if (!from._internal_parent_id().empty()) {
    _this->_internal_set_parent_id(from._internal_parent_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.createdat_ != nullptr);
      if (_this->_impl_.createdat_ == nullptr) {
        _this->_impl_.createdat_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.createdat_);
      } else {
        _this->_impl_.createdat_->MergeFrom(*from._impl_.createdat_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.updatedat_ != nullptr);
      if (_this->_impl_.updatedat_ == nullptr) {
        _this->_impl_.updatedat_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.updatedat_);
      } else {
        _this->_impl_.updatedat_->MergeFrom(*from._impl_.updatedat_);
      }
    }
  }
  if (from._internal_chat_type() != 0) {
    _this->_impl_.chat_type_ = from._impl_.chat_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NoteModel::CopyFrom(const NoteModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:note.NoteModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NoteModel::InternalSwap(NoteModel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.prop_values_.InternalSwap(&other->_impl_.prop_values_);
  _impl_.pages_.InternalSwap(&other->_impl_.pages_);
  _impl_.chat_msgs_.InternalSwap(&other->_impl_.chat_msgs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_id_, &other->_impl_.category_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_color_, &other->_impl_.category_color_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_name_, &other->_impl_.category_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connected_task_, &other->_impl_.connected_task_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_id_, &other->_impl_.parent_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.chat_type_)
      + sizeof(NoteModel::_impl_.chat_type_)
      - PROTOBUF_FIELD_OFFSET(NoteModel, _impl_.createdat_)>(
          reinterpret_cast<char*>(&_impl_.createdat_),
          reinterpret_cast<char*>(&other->_impl_.createdat_));
}

::google::protobuf::Metadata NoteModel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PageModel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PageModel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PageModel, _impl_._has_bits_);
};

void PageModel::clear_createdat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.createdat_ != nullptr) _impl_.createdat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void PageModel::clear_updatedat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updatedat_ != nullptr) _impl_.updatedat_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PageModel::PageModel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:note.PageModel)
}
inline PROTOBUF_NDEBUG_INLINE PageModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::note::PageModel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        contents_{visibility, arena, from.contents_},
        id_(arena, from.id_),
        user_(arena, from.user_),
        title_(arena, from.title_),
        connected_note_(arena, from.connected_note_) {}

PageModel::PageModel(
    ::google::protobuf::Arena* arena,
    const PageModel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PageModel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.createdat_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.createdat_)
                        : nullptr;
  _impl_.updatedat_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.updatedat_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:note.PageModel)
}
inline PROTOBUF_NDEBUG_INLINE PageModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        contents_{visibility, arena},
        id_(arena),
        user_(arena),
        title_(arena),
        connected_note_(arena) {}

inline void PageModel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, createdat_),
           0,
           offsetof(Impl_, updatedat_) -
               offsetof(Impl_, createdat_) +
               sizeof(Impl_::updatedat_));
}
PageModel::~PageModel() {
  // @@protoc_insertion_point(destructor:note.PageModel)
  SharedDtor(*this);
}
inline void PageModel::SharedDtor(MessageLite& self) {
  PageModel& this_ = static_cast<PageModel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.user_.Destroy();
  this_._impl_.title_.Destroy();
  this_._impl_.connected_note_.Destroy();
  delete this_._impl_.createdat_;
  delete this_._impl_.updatedat_;
  this_._impl_.~Impl_();
}

inline void* PageModel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PageModel(arena);
}
constexpr auto PageModel::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PageModel, _impl_.contents_) +
          decltype(PageModel::_impl_.contents_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PageModel), alignof(PageModel), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PageModel::PlacementNew_,
                                 sizeof(PageModel),
                                 alignof(PageModel));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PageModel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PageModel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PageModel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PageModel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PageModel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PageModel>(), &PageModel::ByteSizeLong,
            &PageModel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PageModel, _impl_._cached_size_),
        false,
    },
    &PageModel::kDescriptorMethods,
    &descriptor_table_note_5fmodel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PageModel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 48, 2> PageModel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PageModel, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::note::PageModel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PageModel, _impl_.id_)}},
    // string user = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PageModel, _impl_.user_)}},
    // string title = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PageModel, _impl_.title_)}},
    // string connected_note = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PageModel, _impl_.connected_note_)}},
    // repeated .note.BlockModel contents = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PageModel, _impl_.contents_)}},
    // .google.protobuf.Timestamp createdAt = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 1, PROTOBUF_FIELD_OFFSET(PageModel, _impl_.createdat_)}},
    // .google.protobuf.Timestamp updatedAt = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 2, PROTOBUF_FIELD_OFFSET(PageModel, _impl_.updatedat_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(PageModel, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user = 2;
    {PROTOBUF_FIELD_OFFSET(PageModel, _impl_.user_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string title = 3;
    {PROTOBUF_FIELD_OFFSET(PageModel, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string connected_note = 4;
    {PROTOBUF_FIELD_OFFSET(PageModel, _impl_.connected_note_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .note.BlockModel contents = 5;
    {PROTOBUF_FIELD_OFFSET(PageModel, _impl_.contents_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp createdAt = 6;
    {PROTOBUF_FIELD_OFFSET(PageModel, _impl_.createdat_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp updatedAt = 7;
    {PROTOBUF_FIELD_OFFSET(PageModel, _impl_.updatedat_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::note::BlockModel>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\16\2\4\5\16\0\0\0"
    "note.PageModel"
    "id"
    "user"
    "title"
    "connected_note"
  }},
};

PROTOBUF_NOINLINE void PageModel::Clear() {
// @@protoc_insertion_point(message_clear_start:note.PageModel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contents_.Clear();
  _impl_.id_.ClearToEmpty();
  _impl_.user_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.connected_note_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.createdat_ != nullptr);
      _impl_.createdat_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.updatedat_ != nullptr);
      _impl_.updatedat_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PageModel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PageModel& this_ = static_cast<const PageModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PageModel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PageModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:note.PageModel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.PageModel.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string user = 2;
          if (!this_._internal_user().empty()) {
            const std::string& _s = this_._internal_user();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.PageModel.user");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string title = 3;
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.PageModel.title");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string connected_note = 4;
          if (!this_._internal_connected_note().empty()) {
            const std::string& _s = this_._internal_connected_note();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.PageModel.connected_note");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // repeated .note.BlockModel contents = 5;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_contents_size());
               i < n; i++) {
            const auto& repfield = this_._internal_contents().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp createdAt = 6;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.createdat_, this_._impl_.createdat_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp updatedAt = 7;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.updatedat_, this_._impl_.updatedat_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:note.PageModel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PageModel::ByteSizeLong(const MessageLite& base) {
          const PageModel& this_ = static_cast<const PageModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PageModel::ByteSizeLong() const {
          const PageModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:note.PageModel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .note.BlockModel contents = 5;
            {
              total_size += 1UL * this_._internal_contents_size();
              for (const auto& msg : this_._internal_contents()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string user = 2;
            if (!this_._internal_user().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user());
            }
            // string title = 3;
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string connected_note = 4;
            if (!this_._internal_connected_note().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_connected_note());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp createdAt = 6;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.createdat_);
            }
            // .google.protobuf.Timestamp updatedAt = 7;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updatedat_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PageModel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PageModel*>(&to_msg);
  auto& from = static_cast<const PageModel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:note.PageModel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_contents()->MergeFrom(
      from._internal_contents());
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_connected_note().empty()) {
    _this->_internal_set_connected_note(from._internal_connected_note());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.createdat_ != nullptr);
      if (_this->_impl_.createdat_ == nullptr) {
        _this->_impl_.createdat_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.createdat_);
      } else {
        _this->_impl_.createdat_->MergeFrom(*from._impl_.createdat_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.updatedat_ != nullptr);
      if (_this->_impl_.updatedat_ == nullptr) {
        _this->_impl_.updatedat_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.updatedat_);
      } else {
        _this->_impl_.updatedat_->MergeFrom(*from._impl_.updatedat_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PageModel::CopyFrom(const PageModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:note.PageModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PageModel::InternalSwap(PageModel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contents_.InternalSwap(&other->_impl_.contents_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, &other->_impl_.user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.connected_note_, &other->_impl_.connected_note_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PageModel, _impl_.updatedat_)
      + sizeof(PageModel::_impl_.updatedat_)
      - PROTOBUF_FIELD_OFFSET(PageModel, _impl_.createdat_)>(
          reinterpret_cast<char*>(&_impl_.createdat_),
          reinterpret_cast<char*>(&other->_impl_.createdat_));
}

::google::protobuf::Metadata PageModel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BlockModel::_Internal {
 public:
};

BlockModel::BlockModel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:note.BlockModel)
}
inline PROTOBUF_NDEBUG_INLINE BlockModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::note::BlockModel& from_msg)
      : id_(arena, from.id_),
        src_task_id_(arena, from.src_task_id_),
        body_(arena, from.body_),
        _cached_size_{0} {}

BlockModel::BlockModel(
    ::google::protobuf::Arena* arena,
    const BlockModel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BlockModel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.block_type_ = from._impl_.block_type_;

  // @@protoc_insertion_point(copy_constructor:note.BlockModel)
}
inline PROTOBUF_NDEBUG_INLINE BlockModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        src_task_id_(arena),
        body_(arena),
        _cached_size_{0} {}

inline void BlockModel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.block_type_ = {};
}
BlockModel::~BlockModel() {
  // @@protoc_insertion_point(destructor:note.BlockModel)
  SharedDtor(*this);
}
inline void BlockModel::SharedDtor(MessageLite& self) {
  BlockModel& this_ = static_cast<BlockModel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.src_task_id_.Destroy();
  this_._impl_.body_.Destroy();
  this_._impl_.~Impl_();
}

inline void* BlockModel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BlockModel(arena);
}
constexpr auto BlockModel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BlockModel),
                                            alignof(BlockModel));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BlockModel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BlockModel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BlockModel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BlockModel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BlockModel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BlockModel>(), &BlockModel::ByteSizeLong,
            &BlockModel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BlockModel, _impl_._cached_size_),
        false,
    },
    &BlockModel::kDescriptorMethods,
    &descriptor_table_note_5fmodel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BlockModel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 41, 2> BlockModel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::note::BlockModel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string body = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(BlockModel, _impl_.body_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BlockModel, _impl_.id_)}},
    // string src_task_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BlockModel, _impl_.src_task_id_)}},
    // .note.BlockType block_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BlockModel, _impl_.block_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BlockModel, _impl_.block_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(BlockModel, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string src_task_id = 2;
    {PROTOBUF_FIELD_OFFSET(BlockModel, _impl_.src_task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .note.BlockType block_type = 3;
    {PROTOBUF_FIELD_OFFSET(BlockModel, _impl_.block_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string body = 4;
    {PROTOBUF_FIELD_OFFSET(BlockModel, _impl_.body_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\17\2\13\0\4\0\0\0"
    "note.BlockModel"
    "id"
    "src_task_id"
    "body"
  }},
};

PROTOBUF_NOINLINE void BlockModel::Clear() {
// @@protoc_insertion_point(message_clear_start:note.BlockModel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.src_task_id_.ClearToEmpty();
  _impl_.body_.ClearToEmpty();
  _impl_.block_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BlockModel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BlockModel& this_ = static_cast<const BlockModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BlockModel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BlockModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:note.BlockModel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.BlockModel.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string src_task_id = 2;
          if (!this_._internal_src_task_id().empty()) {
            const std::string& _s = this_._internal_src_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.BlockModel.src_task_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .note.BlockType block_type = 3;
          if (this_._internal_block_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_block_type(), target);
          }

          // string body = 4;
          if (!this_._internal_body().empty()) {
            const std::string& _s = this_._internal_body();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.BlockModel.body");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:note.BlockModel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BlockModel::ByteSizeLong(const MessageLite& base) {
          const BlockModel& this_ = static_cast<const BlockModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BlockModel::ByteSizeLong() const {
          const BlockModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:note.BlockModel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string src_task_id = 2;
            if (!this_._internal_src_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_src_task_id());
            }
            // string body = 4;
            if (!this_._internal_body().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_body());
            }
            // .note.BlockType block_type = 3;
            if (this_._internal_block_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_block_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BlockModel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BlockModel*>(&to_msg);
  auto& from = static_cast<const BlockModel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:note.BlockModel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_src_task_id().empty()) {
    _this->_internal_set_src_task_id(from._internal_src_task_id());
  }
  if (!from._internal_body().empty()) {
    _this->_internal_set_body(from._internal_body());
  }
  if (from._internal_block_type() != 0) {
    _this->_impl_.block_type_ = from._impl_.block_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BlockModel::CopyFrom(const BlockModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:note.BlockModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BlockModel::InternalSwap(BlockModel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.src_task_id_, &other->_impl_.src_task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.body_, &other->_impl_.body_, arena);
  swap(_impl_.block_type_, other->_impl_.block_type_);
}

::google::protobuf::Metadata BlockModel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PropValueModel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PropValueModel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_._has_bits_);
};

PropValueModel::PropValueModel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:note.PropValueModel)
}
inline PROTOBUF_NDEBUG_INLINE PropValueModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::note::PropValueModel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        prop_id_(arena, from.prop_id_),
        prop_name_(arena, from.prop_name_) {}

PropValueModel::PropValueModel(
    ::google::protobuf::Arena* arena,
    const PropValueModel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PropValueModel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.values_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::note::PropValueType>(
                              arena, *from._impl_.values_)
                        : nullptr;
  _impl_.prop_type_ = from._impl_.prop_type_;

  // @@protoc_insertion_point(copy_constructor:note.PropValueModel)
}
inline PROTOBUF_NDEBUG_INLINE PropValueModel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        prop_id_(arena),
        prop_name_(arena) {}

inline void PropValueModel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, values_),
           0,
           offsetof(Impl_, prop_type_) -
               offsetof(Impl_, values_) +
               sizeof(Impl_::prop_type_));
}
PropValueModel::~PropValueModel() {
  // @@protoc_insertion_point(destructor:note.PropValueModel)
  SharedDtor(*this);
}
inline void PropValueModel::SharedDtor(MessageLite& self) {
  PropValueModel& this_ = static_cast<PropValueModel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.prop_id_.Destroy();
  this_._impl_.prop_name_.Destroy();
  delete this_._impl_.values_;
  this_._impl_.~Impl_();
}

inline void* PropValueModel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PropValueModel(arena);
}
constexpr auto PropValueModel::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PropValueModel),
                                            alignof(PropValueModel));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PropValueModel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PropValueModel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PropValueModel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PropValueModel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PropValueModel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PropValueModel>(), &PropValueModel::ByteSizeLong,
            &PropValueModel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_._cached_size_),
        false,
    },
    &PropValueModel::kDescriptorMethods,
    &descriptor_table_note_5fmodel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PropValueModel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 44, 2> PropValueModel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::note::PropValueModel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .note.PropValueType values = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.values_)}},
    // string prop_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.prop_id_)}},
    // string prop_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.prop_name_)}},
    // .note.PropertyType prop_type = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PropValueModel, _impl_.prop_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.prop_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string prop_id = 1;
    {PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.prop_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string prop_name = 2;
    {PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.prop_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .note.PropertyType prop_type = 3;
    {PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.prop_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .note.PropValueType values = 4;
    {PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.values_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::note::PropValueType>()},
  }}, {{
    "\23\7\11\0\0\0\0\0"
    "note.PropValueModel"
    "prop_id"
    "prop_name"
  }},
};

PROTOBUF_NOINLINE void PropValueModel::Clear() {
// @@protoc_insertion_point(message_clear_start:note.PropValueModel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.prop_id_.ClearToEmpty();
  _impl_.prop_name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.values_ != nullptr);
    _impl_.values_->Clear();
  }
  _impl_.prop_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PropValueModel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PropValueModel& this_ = static_cast<const PropValueModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PropValueModel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PropValueModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:note.PropValueModel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string prop_id = 1;
          if (!this_._internal_prop_id().empty()) {
            const std::string& _s = this_._internal_prop_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.PropValueModel.prop_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string prop_name = 2;
          if (!this_._internal_prop_name().empty()) {
            const std::string& _s = this_._internal_prop_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.PropValueModel.prop_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .note.PropertyType prop_type = 3;
          if (this_._internal_prop_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_prop_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .note.PropValueType values = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.values_, this_._impl_.values_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:note.PropValueModel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PropValueModel::ByteSizeLong(const MessageLite& base) {
          const PropValueModel& this_ = static_cast<const PropValueModel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PropValueModel::ByteSizeLong() const {
          const PropValueModel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:note.PropValueModel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string prop_id = 1;
            if (!this_._internal_prop_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_prop_id());
            }
            // string prop_name = 2;
            if (!this_._internal_prop_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_prop_name());
            }
          }
           {
            // .note.PropValueType values = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.values_);
            }
          }
           {
            // .note.PropertyType prop_type = 3;
            if (this_._internal_prop_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_prop_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PropValueModel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PropValueModel*>(&to_msg);
  auto& from = static_cast<const PropValueModel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:note.PropValueModel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_prop_id().empty()) {
    _this->_internal_set_prop_id(from._internal_prop_id());
  }
  if (!from._internal_prop_name().empty()) {
    _this->_internal_set_prop_name(from._internal_prop_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.values_ != nullptr);
    if (_this->_impl_.values_ == nullptr) {
      _this->_impl_.values_ =
          ::google::protobuf::Message::CopyConstruct<::note::PropValueType>(arena, *from._impl_.values_);
    } else {
      _this->_impl_.values_->MergeFrom(*from._impl_.values_);
    }
  }
  if (from._internal_prop_type() != 0) {
    _this->_impl_.prop_type_ = from._impl_.prop_type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PropValueModel::CopyFrom(const PropValueModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:note.PropValueModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PropValueModel::InternalSwap(PropValueModel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prop_id_, &other->_impl_.prop_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.prop_name_, &other->_impl_.prop_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.prop_type_)
      + sizeof(PropValueModel::_impl_.prop_type_)
      - PROTOBUF_FIELD_OFFSET(PropValueModel, _impl_.values_)>(
          reinterpret_cast<char*>(&_impl_.values_),
          reinterpret_cast<char*>(&other->_impl_.values_));
}

::google::protobuf::Metadata PropValueModel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PropValueType::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::note::PropValueType, _impl_._oneof_case_);
};

PropValueType::PropValueType(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:note.PropValueType)
}
inline PROTOBUF_NDEBUG_INLINE PropValueType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::note::PropValueType& from_msg)
      : value_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PropValueType::PropValueType(
    ::google::protobuf::Arena* arena,
    const PropValueType& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PropValueType* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_type_case()) {
    case VALUE_TYPE_NOT_SET:
      break;
      case kMultiple:
        new (&_impl_.value_type_.multiple_) decltype(_impl_.value_type_.multiple_){arena, from._impl_.value_type_.multiple_};
        break;
      case kSingle:
        new (&_impl_.value_type_.single_) decltype(_impl_.value_type_.single_){arena, from._impl_.value_type_.single_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:note.PropValueType)
}
inline PROTOBUF_NDEBUG_INLINE PropValueType::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PropValueType::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PropValueType::~PropValueType() {
  // @@protoc_insertion_point(destructor:note.PropValueType)
  SharedDtor(*this);
}
inline void PropValueType::SharedDtor(MessageLite& self) {
  PropValueType& this_ = static_cast<PropValueType&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value_type()) {
    this_.clear_value_type();
  }
  this_._impl_.~Impl_();
}

void PropValueType::clear_value_type() {
// @@protoc_insertion_point(one_of_clear_start:note.PropValueType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_type_case()) {
    case kMultiple: {
      _impl_.value_type_.multiple_.Destroy();
      break;
    }
    case kSingle: {
      _impl_.value_type_.single_.Destroy();
      break;
    }
    case VALUE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_TYPE_NOT_SET;
}


inline void* PropValueType::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PropValueType(arena);
}
constexpr auto PropValueType::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PropValueType),
                                            alignof(PropValueType));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PropValueType::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PropValueType_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PropValueType::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PropValueType>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PropValueType::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PropValueType>(), &PropValueType::ByteSizeLong,
            &PropValueType::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PropValueType, _impl_._cached_size_),
        false,
    },
    &PropValueType::kDescriptorMethods,
    &descriptor_table_note_5fmodel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PropValueType::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 41, 2> PropValueType::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::note::PropValueType>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string multiple = 1;
    {PROTOBUF_FIELD_OFFSET(PropValueType, _impl_.value_type_.multiple_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string single = 2;
    {PROTOBUF_FIELD_OFFSET(PropValueType, _impl_.value_type_.single_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\10\6\0\0\0\0\0"
    "note.PropValueType"
    "multiple"
    "single"
  }},
};

PROTOBUF_NOINLINE void PropValueType::Clear() {
// @@protoc_insertion_point(message_clear_start:note.PropValueType)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PropValueType::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PropValueType& this_ = static_cast<const PropValueType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PropValueType::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PropValueType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:note.PropValueType)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_type_case()) {
            case kMultiple: {
              const std::string& _s = this_._internal_multiple();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.PropValueType.multiple");
              target = stream->WriteStringMaybeAliased(1, _s, target);
              break;
            }
            case kSingle: {
              const std::string& _s = this_._internal_single();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "note.PropValueType.single");
              target = stream->WriteStringMaybeAliased(2, _s, target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:note.PropValueType)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PropValueType::ByteSizeLong(const MessageLite& base) {
          const PropValueType& this_ = static_cast<const PropValueType&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PropValueType::ByteSizeLong() const {
          const PropValueType& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:note.PropValueType)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_type_case()) {
            // string multiple = 1;
            case kMultiple: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_multiple());
              break;
            }
            // string single = 2;
            case kSingle: {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_single());
              break;
            }
            case VALUE_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PropValueType::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PropValueType*>(&to_msg);
  auto& from = static_cast<const PropValueType&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:note.PropValueType)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMultiple: {
        if (oneof_needs_init) {
          _this->_impl_.value_type_.multiple_.InitDefault();
        }
        _this->_impl_.value_type_.multiple_.Set(from._internal_multiple(), arena);
        break;
      }
      case kSingle: {
        if (oneof_needs_init) {
          _this->_impl_.value_type_.single_.InitDefault();
        }
        _this->_impl_.value_type_.single_.Set(from._internal_single(), arena);
        break;
      }
      case VALUE_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PropValueType::CopyFrom(const PropValueType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:note.PropValueType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PropValueType::InternalSwap(PropValueType* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_type_, other->_impl_.value_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PropValueType::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace note
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_note_5fmodel_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
